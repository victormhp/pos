/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ConfigImport } from './routes/config'
import { Route as IndexImport } from './routes/index'
import { Route as SalesIndexImport } from './routes/sales/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as OrdersIndexImport } from './routes/orders/index'
import { Route as ClientsIndexImport } from './routes/clients/index'

// Create/Update Routes

const ConfigRoute = ConfigImport.update({
  id: '/config',
  path: '/config',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SalesIndexRoute = SalesIndexImport.update({
  id: '/sales/',
  path: '/sales/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const OrdersIndexRoute = OrdersIndexImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => rootRoute,
} as any)

const ClientsIndexRoute = ClientsIndexImport.update({
  id: '/clients/',
  path: '/clients/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/config': {
      id: '/config'
      path: '/config'
      fullPath: '/config'
      preLoaderRoute: typeof ConfigImport
      parentRoute: typeof rootRoute
    }
    '/clients/': {
      id: '/clients/'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof ClientsIndexImport
      parentRoute: typeof rootRoute
    }
    '/orders/': {
      id: '/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersIndexImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/sales/': {
      id: '/sales/'
      path: '/sales'
      fullPath: '/sales'
      preLoaderRoute: typeof SalesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/config': typeof ConfigRoute
  '/clients': typeof ClientsIndexRoute
  '/orders': typeof OrdersIndexRoute
  '/products': typeof ProductsIndexRoute
  '/sales': typeof SalesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/config': typeof ConfigRoute
  '/clients': typeof ClientsIndexRoute
  '/orders': typeof OrdersIndexRoute
  '/products': typeof ProductsIndexRoute
  '/sales': typeof SalesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/config': typeof ConfigRoute
  '/clients/': typeof ClientsIndexRoute
  '/orders/': typeof OrdersIndexRoute
  '/products/': typeof ProductsIndexRoute
  '/sales/': typeof SalesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/config' | '/clients' | '/orders' | '/products' | '/sales'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/config' | '/clients' | '/orders' | '/products' | '/sales'
  id:
    | '__root__'
    | '/'
    | '/config'
    | '/clients/'
    | '/orders/'
    | '/products/'
    | '/sales/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ConfigRoute: typeof ConfigRoute
  ClientsIndexRoute: typeof ClientsIndexRoute
  OrdersIndexRoute: typeof OrdersIndexRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
  SalesIndexRoute: typeof SalesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ConfigRoute: ConfigRoute,
  ClientsIndexRoute: ClientsIndexRoute,
  OrdersIndexRoute: OrdersIndexRoute,
  ProductsIndexRoute: ProductsIndexRoute,
  SalesIndexRoute: SalesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/config",
        "/clients/",
        "/orders/",
        "/products/",
        "/sales/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/config": {
      "filePath": "config.tsx"
    },
    "/clients/": {
      "filePath": "clients/index.tsx"
    },
    "/orders/": {
      "filePath": "orders/index.tsx"
    },
    "/products/": {
      "filePath": "products/index.tsx"
    },
    "/sales/": {
      "filePath": "sales/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
